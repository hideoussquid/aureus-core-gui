policy_module(aureus, 1.100.1)

########################################
#
# Declarations
#

type aureus_t;
type aureus_exec_t;
init_daemon_domain(aureus_t, aureus_exec_t)

permissive aureus_t;

type aureus_initrc_exec_t;
init_script_file(aureus_initrc_exec_t)

type aureus_conf_t;
files_type(aureus_conf_t)

type aureus_var_lib_t;
files_type(aureus_var_lib_t)

type aureus_var_run_t;
files_type(aureus_var_run_t)

type aureus_port_t;
corenet_port(aureus_port_t)

########################################
#
# aureus local policy
#
allow aureus_t self:process { fork };

allow aureus_t self:fifo_file rw_fifo_file_perms;
allow aureus_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(aureus_t, aureus_conf_t, aureus_conf_t)
manage_files_pattern(aureus_t, aureus_conf_t, aureus_conf_t)

manage_dirs_pattern(aureus_t, aureus_var_lib_t, aureus_var_lib_t)
manage_files_pattern(aureus_t, aureus_var_lib_t, aureus_var_lib_t)
files_var_lib_filetrans(aureus_t, aureus_var_lib_t, { dir file })

manage_dirs_pattern(aureus_t, aureus_var_run_t, aureus_var_run_t)
manage_files_pattern(aureus_t, aureus_var_run_t, aureus_var_run_t)

sysnet_dns_name_resolve(aureus_t)
corenet_all_recvfrom_unlabeled(aureus_t)

allow aureus_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(aureus_t)
corenet_tcp_sendrecv_generic_node(aureus_t)
corenet_tcp_sendrecv_all_ports(aureus_t)
corenet_tcp_bind_generic_node(aureus_t)

gen_require(`
    type aureus_port_t;
')
allow aureus_t aureus_port_t:tcp_socket name_bind;

gen_require(`
    type aureus_port_t;
')
allow aureus_t aureus_port_t:tcp_socket name_connect;

domain_use_interactive_fds(aureus_t)

files_read_etc_files(aureus_t)

miscfiles_read_localization(aureus_t)

sysnet_dns_name_resolve(aureus_t)

allow aureus_t aureus_exec_t:file execute_no_trans;
allow aureus_t self:process setsched;
corecmd_exec_ls(aureus_t)
corenet_tcp_connect_http_port(aureus_t)
dev_read_urand(aureus_t)
fs_getattr_xattr_fs(aureus_t)
kernel_read_system_state(aureus_t)
